AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ### Policy Configuration
  PolicyName:
    Type: String
    Description: "[REQUIRED] The name of service account's IAM policy."
  
  ### EKS Configuration
  ClusterName:
    Type: String
    Description: "[REQUIRED] The name of EKS cluster."
  
  NodeRoleName:
    Type: String
    Description: "[REQUIRED] The name of EKS node's role."
  
  ### SQS Configuration
  QueueName:
    Type: String
    Description: "[REQUIRED] The name of SQS queue for NTH."

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Policy Configuration"
        Parameters:
          - PolicyName
      
      - Label:
          default: "EKS Configuration"
        Parameters:
          - ClusterName
          - NodeRoleName

Resources:
  Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: !Ref PolicyName
      ManagedPolicyName: !Ref PolicyName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ec2:DescribeImages
              - ec2:RunInstances
              - ec2:DescribeSubnets
              - ec2:DescribeSecurityGroups
              - ec2:DescribeLaunchTemplates
              - ec2:DescribeInstances
              - ec2:DescribeInstanceTypes
              - ec2:DescribeInstanceTypeOfferings
              - ec2:DescribeAvailabilityZones
              - ec2:DeleteLaunchTemplate
              - ec2:CreateTags
              - ec2:CreateLaunchTemplate
              - ec2:CreateFleet
              - ec2:DescribeSpotPriceHistory
              - pricing:GetProducts
            Resource: "*"
            Sid: Karpenter
          - Effect: Allow
            Action:
              - ec2:TerminateInstances
            Resource: "*"
            Condition:
              StringLike:
                ec2:ResourceTag/karpenter.sh/provisioner-name: "*"
            Sid: ConditionalEC2Termination
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${NodeRoleName}
            Sid: PassNodeIAMRole
          - Effect: Allow
            Action:
              - eks:DescribeCluster
            Resource: !Sub arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/${ClusterName}
            Sid: EKSClusterEndpointLookup
          - Effect: Allow
            Action:
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${QueueName}
            Sid: SQS

Outputs:
  PolicyArn:
    Description: Arn for IAM Policy
    Value: !Ref Policy