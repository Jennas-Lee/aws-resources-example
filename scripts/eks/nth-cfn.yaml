AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ProjectName:
    Type: String
    Description: "[REQUIRED] The name of this project."
  
  QueueName:
    Type: String
    Description: "[optional] The name of SQS queue."
    Default: ""
  
  KmsKeyId:
    Type: String
    Description: "[optional] The KMS key id for SQS queue encryption."
    Default: ""
  
  EventRulesBaseName:
    Type: String
    Description: "[optional] The base name of EvnetBridge event rules."
    Default: ""

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Stack Configuration - General"
        Parameters:
          - ProjectName

      - Label:
          default: "SQS Configuration - General"
        Parameters:
          - QueueName
          - KmsKeyId
      
      - Label:
          default: "EventBridge Configuration - General"
        Parameters:
          - EventRulesBaseName

Conditions:
  UseQueueName: !Not [!Equals [!Ref QueueName, ""]]
  UseKms: !Not [!Equals [!Ref KmsKeyId, ""]]
  UseEventRulesBaseName: !Not [!Equals [!Ref EventRulesBaseName, ""]]

Resources:
  Queue:
    Type: 'AWS::SQS::Queue'
    Properties:
      KmsMasterKeyId: !If
        - UseKms
        - !Ref KmsKeyId
        - "alias/aws/sqs"
      MessageRetentionPeriod: 300
      QueueName: !If
        - UseQueueName
        - !Ref QueueName
        - !Ref AWS::NoValue
      Tags:
        - Key: project
          Value: !Ref ProjectName
  
  QueuePolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      Queues:
        - !Ref Queue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
                - sqs.amazonaws.com
            Action: 'sqs:SendMessage'
            Resource: !GetAtt Queue.Arn
  
  ASGTermRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.autoscaling
        detail-type:
          - EC2 Instance-terminate Lifecycle Action
      Name: !If
        - UseEventRulesBaseName
        - !Sub ${EventRulesBaseName}-ASGTermRule
        - !Ref AWS::NoValue
      Targets:
        - Id: 1
          Arn: !GetAtt Queue.Arn
  
  ScheduledChangeRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.health
        detail-type:
          - AWS Health Event
        detail:
          service:
            - EC2
          eventTypeCategory:
            - scheduledChange
      Name: !If
        - UseEventRulesBaseName
        - !Sub ${EventRulesBaseName}-ScheduledChangeRule
        - !Ref AWS::NoValue
      Targets:
        - Id: 1
          Arn: !GetAtt Queue.Arn
  
  SpotTermRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Spot Instance Interruption Warning
      Name: !If
        - UseEventRulesBaseName
        - !Sub ${EventRulesBaseName}-SpotTermRule
        - !Ref AWS::NoValue
      Targets:
        - Id: 1
          Arn: !GetAtt Queue.Arn
  
  RebalanceRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Instance Rebalance Recommendation
      Name: !If
        - UseEventRulesBaseName
        - !Sub ${EventRulesBaseName}-RebalanceRule
        - !Ref AWS::NoValue
      Targets:
        - Id: 1
          Arn: !GetAtt Queue.Arn
  
  InstanceStateChangeRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ec2
        detail-type:
          - EC2 Instance State-change Notification
      Name: !If
        - UseEventRulesBaseName
        - !Sub ${EventRulesBaseName}-InstanceStateChangeRule
        - !Ref AWS::NoValue
      Targets:
        - Id: 1
          Arn: !GetAtt Queue.Arn

Outputs:
  QueueURL:
    Description: Queue url for AWS NTH controller
    Value: !Ref Queue
